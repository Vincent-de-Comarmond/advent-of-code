
#+begin_src C
  #include <stdio.h>
  #include <stdlib.h>

int cheap_hash(char *input_string) {
  int idx = 0, total = 0, multiplier = 1;

  while (input_string[idx] != '\0') {
    total += ((int)input_string[idx++] - 96) * multiplier;
    multiplier *= 26;
  }
  return total;
}

char *unhash(int hashed) {
  int idx = 0, letter_val = 0;
  char *result = malloc(10 * sizeof(char));

  if (!result)
    return NULL;

  while (hashed > 0) {
    letter_val = hashed % 26;
    letter_val = letter_val == 0 ? 26 : letter_val;
    result[idx++] = (char)(letter_val + 96);
    hashed = (hashed - letter_val) / 26;
    if (hashed == 0)
      break;
  }
  result[idx] = '\0';
  return result;
}

  int main() {
    char* input_string = "zz";
    int test = cheap_hash(input_string);
    printf("%s\n", input_string);
    printf("%d\n", test);
    printf("%s\n", unhash(test));
  }

#+end_src

#+RESULTS:
| abcd  |
| 72385 |
| abcd  |


#+begin_src C
#include <stdio.h>

int main() {
    int digit_int = 7;
    char digit_char = digit_int + '0'; // Adds the ASCII value of '0'

    printf("Character digit: %c\n", digit_char);
    return 0;
}
#+end_src

#+begin_src C
  #include <stdio.h>

  int main() {
      char digit_char = 'i'; // Adds the ASCII value of '0'
      int digit_int = 1+digit_char-'a';


      printf("Digit int: %d\n", digit_int);
      return 0;
  }
#+end_src

#+RESULTS:
: Digit int: 9



#+begin_src C
  #include <stdio.h>
  #include <string.h>

  int main() {
      char name[100] = "";
      int value=-1;

      sscanf("Vincent: is 5", "%s: is %d", name, &value);
      printf("%s: %d\n", name, value);
      return 0;
  }
#+end_src

#+RESULTS:
: Vincent:: -1



#+begin_src C
  #include <stdio.h>
  long pow100(int num) {
    long total = 1;
    while (num-- > 0)
      total *= 100;
    return total;
  }
  printf("%ld\n", pow100(2));
#+end_src

#+RESULTS:
: 10000



#+begin_src C  :includes <stdio.h>
  char *hello="Hello, World!";
  printf("%s\n", hello+5);
#+end_src

#+RESULTS:
|   | World! |
